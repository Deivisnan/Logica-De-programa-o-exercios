class No:
    def __init__(self, data):
        self.data = data
        self.next = None

class Encadeadalista:
    def __init__(self):
        self.head = None
        self.tam = 0

    def new_list(self):
        self.head = None
        self.tam = 0

    def append(self, data):
        new_node = No(data)
        
        if self.head is None:
            
            self.head = new_node
            
        else:
            
            current_node = self.head
            
            while current_node.next:
                
                current_node = current_node.next
            current_node.next = new_node
        self.tam += 1

    def display(self):
        
        current_node = self.head
        if current_node is None:
            
            return []

        elements = []
        
        while current_node:
            elements.append(current_node.data)
            current_node = current_node.next
        return elements

    def remove(self, position):
        if position < 0 or position >= self.tam:
            return

        if position == 0:
            self.head = self.head.next
        else:
            
            current_node = self.head
            
            for _ in range(position - 1):
                current_node = current_node.next
            current_node.next = current_node.next.next
        self.tam -= 1

    def free_list(self):
        
        self.head = None
        self.tam = 0

    def inverte_sublista(self, x, y):
        
        if x == y or x >= self.tam or y >= self.tam:
            return

        anterior_x = None
        atual = self.head
        contador = 0

        while contador < x:
            anterior_x = atual
            atual = atual.next
            contador += 1

        inicio_sublista = atual
        anterior = None
        proximo = None

        while contador <= y:
            proximo = atual.next
            atual.next = anterior
            anterior = atual
            atual = proximo
            contador += 1

        if anterior_x:
            anterior_x.next = anterior
        else:
            self.head = anterior

        inicio_sublista.next = atual

if __name__ == "__main__":
    
    n = int(input())
    
    elementos = list(map(int, input().split()))
    li = Encadeadalista()
    
    for elemento in elementos:
        li.append(elemento)

    I = int(input())

    for _ in range(I):
        
        x, y = map(int, input().split())
        li.inverte_sublista(x, y)

    R = int(input())

    for _ in range(R):
        
        x = int(input())
        li.remove(x)

    result = li.display()
    print(" ".join(map(str, result)))

